name: Build and Push Docker Images

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate docker-compose for Portainer
      if: github.event_name != 'pull_request'
      run: |
        # Create docker-compose.portainer.yml with the built image
        cat > docker-compose.portainer.yml << EOF
        services:
          ai-hub:
            image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            container_name: ai-hub
            environment:
              - GEMINI_API_KEY=\${GEMINI_API_KEY}
              - OPENROUTER_API_KEY=\${OPENROUTER_API_KEY}
            ports:
              - "4096:4096"  # OpenCode API server
            volumes:
              - ./workdir:/app/workdir      # Mount workspace
              - ./logs:/app/logs            # Mount logs
              - ./opencode-auth:/root/.local/share/opencode  # Persist auth
            stdin_open: true
            tty: true
            restart: unless-stopped
            networks:
              - ai-hub-network

          opencode-webui:
            image: ghcr.io/open-webui/open-webui:main
            container_name: opencode-webui
            ports:
              - "3001:8080"  # OpenCode WebUI interface
            environment:
              - OPENAI_API_BASE_URL=http://ai-hub:8080/v1
              - OPENAI_API_KEY=dummy-key
            volumes:
              - ./opencode-webui-data:/app/backend/data
            depends_on:
              - ai-hub
            restart: unless-stopped
            networks:
              - ai-hub-network

        networks:
          ai-hub-network:
            driver: bridge
        EOF

    - name: Upload Portainer compose file
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: portainer-compose
        path: docker-compose.portainer.yml